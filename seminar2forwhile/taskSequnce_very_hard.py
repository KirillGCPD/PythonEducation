#Имеется список случайных целых чисел. Создайте список, в который попадают числа, 
#описывающие максимальную сплошную возрастающую последовательность. Порядок элементов менять нельзя.
#Одно число - это не последовательность.
#Пример:
#[1, 5, 2, 3, 4, 6, 1, 7] => [1, 7] так как здесь вразброс присутствуют все числа от 1 до 7
#[1, 5, 2, 3, 4, 1, 7, 8 , 15 , 1 ] => [1, 5] так как здесь есть числа от 1 до 5 и эта последовательность длиннее чем от 7 до 8
#[1, 5, 3, 4, 1, 7, 8 , 15 , 1 ] => [3, 5] так как здесь есть числа от 3 до 5 и эта последовательность длиннее чем от 7 до 8

#source_list = [1, 5, 2, 3, 4, 6, 1, 7]
source_list = [1, 5, 2, 3, 4, 1, 7, 8 , 15 , 1 ] 
source_list = [1, 5, 3, 4, 1, 7, 8 , 15 , 1 ] 
#source_list = [1,23, 5, 66 ] 

current_left = source_list[0] #текущая последовательность
current_right = source_list[0]
max_left = source_list[0]
max_right = source_list[0]

index=0
for element in source_list:  
    current_left=element #берем опорный элемент текущий элемент списка
    current_right=element+1 #начинаем искать в списке элемент на 1 больше
    while current_right in source_list: #если элемент в списке
        current_right+=1 #будем пробовать искать следующий
    current_right-=1 #поиск закончится на элементе которого нет в списке, поэтому -1.
    if max_right-max_left < current_right-current_left: #если текущая последовательность оказалась больше сохраненной - то запоминаем её
        max_left=current_left
        max_right=current_right  
print(f"[{max_left},{max_right}]")